dt[i,h2l_this_sample:=h2_o2l(h2o_this_sample,se_h2o_this_sample,K,Ncase/(Ncase+Ncontrol))]
dt[i,r2l_gg:= PAFGRS:::r2_cc_sample_LDpred(N_case = Ncase,
N_control = Ncontrol,
M = 60000,prev = K,
h2_l = h2l_this_sample,p=1)[3]/h2l_this_sample]}
dt[,r2l_gg:=r2l_gg[2:1]]
dt[,expected:= r2l_gg*rg^2*h2l_this_sample]
dt=data.table(sample=c("iPSYCH-2015i","iPSYCH-2012"),Ncase=c(9807,19602),
Ncontrol=c(15233,23366),h2o_this_sample=c(.107,.095),
se_h2o_this_sample=c(0.2,.012),K=K,
rg=.87,observed=c(0.011,0.005))
for(i in 1:2){
dt[i,h2l_this_sample:=h2_o2l(h2o_this_sample,se_h2o_this_sample,K,Ncase/(Ncase+Ncontrol))]
dt[i,r2l_gg:= PAFGRS:::r2_cc_sample_LDpred(N_case = Ncase,
N_control = Ncontrol,
M = 60000,prev = K,
h2_l = h2l_this_sample,p=1)[3]/h2l_this_sample]}
dt[,r2l_gg:=r2l_gg[2:1]]
dt[,expected:= r2l_gg*rg^2*h2l_this_sample]
dt_long= melt(dt,measure.vars = c("expected","observed"),)
g1 <- ggplot(dt_long,aes(x=sample, y=value,fill=variable))+
geom_bar(stat = "identity",position = "dodge",color="black")+theme_bw()+
labs(y=expression(R[l]^2-"PGS"),x="Sample",fill="")+ scale_fill_brewer(palette="Dark2")
g1
dt
dt=data.table(sample=c("iPSYCH-2015i","iPSYCH-2012"),Ncase=c(9807,19602),
Ncontrol=c(15233,23366),h2o_this_sample=c(.107,.095),
se_h2o_this_sample=c(0.02,.012),K=K,
rg=.87,observed=c(0.011,0.005))
for(i in 1:2){
dt[i,h2l_this_sample:=h2_o2l(h2o_this_sample,se_h2o_this_sample,K,Ncase/(Ncase+Ncontrol))]
dt[i,r2l_gg:= PAFGRS:::r2_cc_sample_LDpred(N_case = Ncase,
N_control = Ncontrol,
M = 60000,prev = K,
h2_l = h2l_this_sample,p=1)[3]/h2l_this_sample]}
dt[,r2l_gg:=r2l_gg[2:1]]
dt[,expected:= r2l_gg*rg^2*h2l_this_sample]
dt
K=0.05
library(data.table)
library(ggplot2)
dt=data.table(sample=c("iPSYCH-2015i","iPSYCH-2012"),Ncase=c(9807,19602),
Ncontrol=c(15233,23366),h2o_this_sample=c(.107,.095),
se_h2o_this_sample=c(0.02,.012),K=K,
rg=.87,observed=c(0.011,0.005))
for(i in 1:2){
dt[i,h2l_this_sample:=h2_o2l(h2o_this_sample,se_h2o_this_sample,K,Ncase/(Ncase+Ncontrol))]
dt[i,r2l_gg:= PAFGRS:::r2_cc_sample_LDpred(N_case = Ncase,
N_control = Ncontrol,
M = 60000,prev = K,
h2_l = h2l_this_sample,p=1)[3]/h2l_this_sample]}
dt[,r2l_gg:=r2l_gg[2:1]]
dt[,expected:= r2l_gg*rg^2*h2l_this_sample]
dt_long= melt(dt,measure.vars = c("expected","observed"),)
g1 <- ggplot(dt_long,aes(x=sample, y=value,fill=variable))+
geom_bar(stat = "identity",position = "dodge",color="black")+theme_bw()+
labs(y=expression(R[l]^2-"PGS"),x="Sample",fill="")+ scale_fill_brewer(palette="Dark2")
dt_long[sample=="iPSYCH-2012"&variable=="expected",pafgrs_R2:=0.057]
dt_long[sample=="iPSYCH-2015i"&variable=="expected",pafgrs_R2:=0.057]
dt_long[sample=="iPSYCH-2012"&variable=="observed",pafgrs_R2:=0.109]
dt_long[sample=="iPSYCH-2015i"&variable=="observed",pafgrs_R2:=0.103]
g2 <- ggplot(dt_long,aes(x=sample, y=pafgrs_R2,fill=variable))+
geom_bar(stat = "identity",position = "dodge",color="black")+theme_bw()+
labs(y=expression(R[l]^2-"PA-FGRS"),x="Sample",fill="")+ scale_fill_brewer(palette="Dark2")
g1
K=0.13
library(data.table)
library(ggplot2)
dt=data.table(sample=c("iPSYCH-2015i","iPSYCH-2012"),Ncase=c(9807,19602),
Ncontrol=c(15233,23366),h2o_this_sample=c(.107,.095),
se_h2o_this_sample=c(0.02,.012),K=K,
rg=.87,observed=c(0.011,0.005))
for(i in 1:2){
dt[i,h2l_this_sample:=h2_o2l(h2o_this_sample,se_h2o_this_sample,K,Ncase/(Ncase+Ncontrol))]
dt[i,r2l_gg:= PAFGRS:::r2_cc_sample_LDpred(N_case = Ncase,
N_control = Ncontrol,
M = 60000,prev = K,
h2_l = h2l_this_sample,p=1)[3]/h2l_this_sample]}
dt[,r2l_gg:=r2l_gg[2:1]]
dt[,expected:= r2l_gg*rg^2*h2l_this_sample]
dt_long= melt(dt,measure.vars = c("expected","observed"),)
g1 <- ggplot(dt_long,aes(x=sample, y=value,fill=variable))+
geom_bar(stat = "identity",position = "dodge",color="black")+theme_bw()+
labs(y=expression(R[l]^2-"PGS"),x="Sample",fill="")+ scale_fill_brewer(palette="Dark2")
g1
dnorm(qnorm(K))
dnorm(qnorm(1-K))
zv^2
zv <- dnorm(qnorm(K))
h2_liab <- h2 * K^2 * ( 1 - K)^2 / P / (1-P) / zv^2
P=.25
K^2 * ( 1 - K)^2 / P / (1-P) / zv^2
P=.5
K^2 * ( 1 - K)^2 / P / (1-P) / zv^2
dt
K=0.13
library(data.table)
library(ggplot2)
dt=data.table(sample=c("iPSYCH-2015i","iPSYCH-2012"),Ncase=c(9807,19602),
Ncontrol=c(15233,23366),h2o_this_sample=c(.107,.095),
se_h2o_this_sample=c(0.02,.012),K=K,
rg=.87,observed=c(0.011,0.005))
for(i in 1:2){
dt[i,h2l_this_sample:=h2_o2l(h2o_this_sample,se_h2o_this_sample,K,Ncase/(Ncase+Ncontrol))]
dt[i,r2l_gg:= PAFGRS:::r2_cc_sample_LDpred(N_case = Ncase,
N_control = Ncontrol,
M = 60000,prev = K,
h2_l = h2l_this_sample,p=1)[3]/h2l_this_sample]}
dt[,r2l_gg:=r2l_gg[2:1]]
dt
dt[,expected:= r2l_gg*rg^2*h2l_this_sample]
dt
rg^2
.87^2
r2_cc_sample_LDpred(N_case = Ncase,
N_control = Ncontrol,
M = 60000,prev = K,
h2_l = h2l_this_sample,p=1)
PAFGRS:::r2_cc_sample_LDpred(N_case = Ncase,
N_control = Ncontrol,
M = 60000,prev = K,
h2_l = h2l_this_sample,p=1)
PAFGRS:::r2_cc_sample_LDpred
dt=data.table(sample=c("iPSYCH-2015i","iPSYCH-2012"),Ncase=c(9807,19602),
Ncontrol=c(15233,23366),h2o_this_sample=c(.107,.095),
se_h2o_this_sample=c(0.02,.012),K=K,
rg=.87,observed=c(0.011,0.005))
for(i in 1:2){
dt[i,h2l_this_sample:=h2_o2l(h2o_this_sample,se_h2o_this_sample,K,Ncase/(Ncase+Ncontrol))]
dt[i,r2l_gg:= PAFGRS:::r2_cc_sample_LDpred(N_case = Ncase,
N_control = Ncontrol,
M = 60000,prev = K,
h2_l = h2l_this_sample,p=1)[2]/h2l_this_sample]}
dt[,r2l_gg:=r2l_gg[2:1]]
dt[,expected:= r2l_gg*rg^2*h2l_this_sample]
dt_long= melt(dt,measure.vars = c("expected","observed"),)
g1 <- ggplot(dt_long,aes(x=sample, y=value,fill=variable))+
geom_bar(stat = "identity",position = "dodge",color="black")+theme_bw()+
labs(y=expression(R[l]^2-"PGS"),x="Sample",fill="")+ scale_fill_brewer(palette="Dark2")
g1
library(data.table)
library(ggplot2)
dt=data.table(sample=c("iPSYCH-2015i","iPSYCH-2012"),Ncase=c(9807,19602),
Ncontrol=c(15233,23366),h2o_this_sample=c(.107,.095),
se_h2o_this_sample=c(0.02,.012),K=K,
rg=.87,observed=c(0.011,0.005))
for(i in 1:2){
dt[i,h2l_this_sample:=h2_o2l(h2o_this_sample,se_h2o_this_sample,K,Ncase/(Ncase+Ncontrol))]
dt[i,r2l_gg:= PAFGRS:::r2_cc_sample_LDpred(N_case = Ncase,
N_control = Ncontrol,
M = 60000,prev = K,
h2_l = h2l_this_sample,p=1)[3]/h2l_this_sample]}
dt[,r2l_gg:=r2l_gg[2:1]]
dt[,expected:= r2l_gg*rg^2*h2l_this_sample]
dt_long= melt(dt,measure.vars = c("expected","observed"),)
g1 <- ggplot(dt_long,aes(x=sample, y=value,fill=variable))+
geom_bar(stat = "identity",position = "dodge",color="black")+theme_bw()+
labs(y=expression(R[l]^2-"PGS"),x="Sample",fill="")+ scale_fill_brewer(palette="Dark2")
g1
dt_long[sample=="iPSYCH-2012"&variable=="observed",pafgrs_R2:=0.028]
dt_long[sample=="iPSYCH-2012"&variable=="expected",pafgrs_R2:=0.0207]
dt_long[sample=="iPSYCH-2015i"&variable=="expected",pafgrs_R2:=0.0205]
dt_long[sample=="iPSYCH-2012"&variable=="observed",pafgrs_R2:=0.028]
dt_long[sample=="iPSYCH-2015i"&variable=="observed",pafgrs_R2:=0.023]
g2 <- ggplot(dt_long,aes(x=sample, y=pafgrs_R2,fill=variable))+
geom_bar(stat = "identity",position = "dodge",color="black")+theme_bw()+
labs(y=expression(R[l]^2-"PA-FGRS"),x="Sample",fill="")+ scale_fill_brewer(palette="Dark2")
g2
dt_long[sample=="iPSYCH-2012"&variable=="expected",cor:=0.029]
dt_long[sample=="iPSYCH-2015i"&variable=="expected",cor:=0.040]
dt_long[sample=="iPSYCH-2012"&variable=="observed", cor:=0.039]
dt_long[sample=="iPSYCH-2015i"&variable=="observed",cor:=0.056]
g3 <- ggplot(dt_long,aes(x=sample, y=cor,fill=variable))+
geom_bar(stat = "identity",position = "dodge",color="black")+theme_bw()+
labs(y=expression(corr("PGS","PAFGRS")),x="Sample",fill="")+ scale_fill_brewer(palette="Dark2")
gridExtra::grid.arrange(g1,g2,g3)
dt
dt_long
dcast(dt_long,formula = cor~sample+variable)
dcast(dt_long,formula = sample+variable~)
dcast(dt_long,formula = sample+variable~cor)
dcast(dt_long,formula = cor~variable)
dcast(dt_long,formula = sample~variable)
dcast(dt_long,formula = sample~variable,value.var = "cor")
qplot(dcast(dt_long,formula = sample~variable,value.var = "cor"))
ggplot(dcast(dt_long,formula = sample~variable,value.var = "cor")),aes(x=expected,y=observed)
ggplot(data=dcast(dt_long,formula = sample~variable,value.var = "cor")),aes(x=expected,y=observed)
ggplot(data=dcast(dt_long,formula = sample~variable,value.var = "cor"),aes(x=expected,y=observed)
ggplot(data=dcast(dt_long,formula = sample~variable,value.var = "cor"),aes(x=expected,y=observed)
)
ggplot(data=dcast(dt_long,formula = sample~variable,value.var = "cor"),aes(x=expected,y=observed))+geom_p
ggplot(data=dcast(dt_long,formula = sample~variable,value.var = "cor"),aes(x=expected,y=observed))+geom_point
ggplot(data=dcast(dt_long,formula = sample~variable,value.var = "cor"),aes(x=expected,y=observed))+geom_point()
ggplot(data=dcast(dt_long,formula = sample~variable,value.var = "cor"),aes(x=expected,y=observed))+geom_point()+expand_limits(x=0,y=0)
ggplot(data=dcast(dt_long,formula = sample~variable,value.var = "cor"),aes(x=expected,y=observed))+
geom_point()+expand_limits(x=0,y=0)+geom_abline(slope=1)
ggplot(data=dcast(dt_long,formula = sample~variable,value.var = "cor"),aes(x=expected,y=observed))+
geom_point()+expand_limits(x=0,y=0)+geom_abline(slope=1)+labs(
x = expression(paste("Expected R"[i]^2, " (FGRS)")),
y = expression(paste("Observed R"[i]^2, " (RGRS)"))
) +theme_classic() +
theme(
panel.border = element_rect(color = "black", fill = NA, size = 0.5),
axis.text = element_text(size = 10),
axis.title = element_text(size = 12),
legend.position = "none"  # Remove legend since colors seem arbitrary
)
ggplot(data=dcast(dt_long,formula = sample~variable,value.var = "pafgrs_R2"),aes(x=expected,y=observed))+
geom_point()+expand_limits(x=0,y=0)+geom_abline(slope=1)+labs(
x = expression(paste("Expected R"[i]^2, " (FGRS)")),
y = expression(paste("Observed R"[i]^2, " (FGRS)"))
) +theme_classic() +
theme(
panel.border = element_rect(color = "black", fill = NA, size = 0.5),
axis.text = element_text(size = 10),
axis.title = element_text(size = 12)
)
ggplot(data=dcast(dt_long,formula = sample~variable,value.var = "pafgrs_R2"),aes(x=expected,y=observed))+
geom_point()+expand_limits(x=0,y=0)+geom_abline(slope=1)+labs(
x = expression(paste("Expected R"[l]^2, " (FGRS)")),
y = expression(paste("Observed R"[l]^2, " (FGRS)"))
) +theme_classic() +
theme(
panel.border = element_rect(color = "black", fill = NA, size = 0.5),
axis.text = element_text(size = 10),
axis.title = element_text(size = 12)
)
g1 <- ggplot(data=dcast(dt_long,formula = sample~variable,value.var = "pafgrs_R2"),aes(x=expected,y=observed,shape=cohort))+
geom_point()+expand_limits(x=0,y=0)+geom_abline(slope=1)+labs(
x = expression(paste("Expected R"[l]^2, " (FGRS)")),
y = expression(paste("Observed R"[l]^2, " (FGRS)"))
) +theme_classic() +
theme(
panel.border = element_rect(color = "black", fill = NA, size = 0.5),
axis.text = element_text(size = 10),
axis.title = element_text(size = 12)
)
g1
pafgrs_R2
dcast(dt_long,formula = sample~variable,value.var = "pafgrs_R2")
g1 <- ggplot(data=dcast(dt_long,formula = sample~variable,value.var = "pafgrs_R2"),aes(x=expected,y=observed,shape=sample))+
geom_point()+expand_limits(x=0,y=0)+geom_abline(slope=1)+labs(
x = expression(paste("Expected R"[l]^2, " (FGRS)")),
y = expression(paste("Observed R"[l]^2, " (FGRS)"))
) +theme_classic() +
theme(
panel.border = element_rect(color = "black", fill = NA, size = 0.5),
axis.text = element_text(size = 10),
axis.title = element_text(size = 12)
)
g1
g1 <- ggplot(data=dcast(dt_long,formula = sample~variable,value.var = "pafgrs_R2"),aes(x=expected,y=observed,shape=sample))+
geom_point()+expand_limits(x=0,y=0)+geom_abline(slope=1)+labs(
x = expression(paste("Expected R"[l]^2, " (FGRS)")),
y = expression(paste("Observed R"[l]^2, " (FGRS)"),shape="")
) +theme_classic() +
theme(
panel.border = element_rect(color = "black", fill = NA, size = 0.5),
axis.text = element_text(size = 10),
axis.title = element_text(size = 12)
)
g1 <- ggplot(data=dcast(dt_long,formula = sample~variable,value.var = "pafgrs_R2"),aes(x=expected,y=observed,shape=sample))+
geom_point()+expand_limits(x=0,y=0)+geom_abline(slope=1)+labs(
x = expression(paste("Expected R"[l]^2, " (FGRS)")),
y = expression(paste("Observed R"[l]^2, " (FGRS)"),shape="")
) +theme_classic() +
theme(
panel.border = element_rect(color = "black", fill = NA, size = 0.5),
axis.text = element_text(size = 10),
axis.title = element_text(size = 12)
)
g1
g1 <- ggplot(data=dcast(dt_long,formula = sample~variable,value.var = "pafgrs_R2"),aes(x=expected,y=observed,shape=sample))+
geom_point()+expand_limits(x=c(0,.05),y=c(0,.05))+geom_abline(slope=1)+labs(
x = expression(paste("Expected R"[l]^2, " (FGRS)")),
y = expression(paste("Observed R"[l]^2, " (FGRS)"),shape="")
) +theme_classic() +
theme(
panel.border = element_rect(color = "black", fill = NA, size = 0.5),
axis.text = element_text(size = 10),
axis.title = element_text(size = 12)
)
g1
dt_long
g2 <- ggplot(data=dcast(dt_long,formula = sample~variable,value.var = "value"),aes(x=expected,y=observed,shape=sample))+
geom_point()+expand_limits(x=c(0,.05),y=c(0,.05))+geom_abline(slope=1)+labs(
x = expression(paste("Expected R"[l]^2, " (PGS)")),
y = expression(paste("Observed R"[l]^2, " (PGS)"),shape="")
) +theme_classic() +
theme(
panel.border = element_rect(color = "black", fill = NA, size = 0.5),
axis.text = element_text(size = 10),
axis.title = element_text(size = 12)
)
dcast(dt_long,formula = sample~variable,value.var = "pafgrs_R2")g2
g2
g3 <- ggplot(data=dcast(dt_long,formula = sample~variable,value.var = "cor"),aes(x=expected,y=observed,shape=sample))+
geom_point()+expand_limits(x=c(0,.1),y=c(0,.1))+geom_abline(slope=1)+labs(
x = expression(paste("Expected r"["PGS,PA-FGRS"])),
y = expression(paste("Observed R"["PGS,PA-FGRS"])),shape="")
g3 <- ggplot(data=dcast(dt_long,formula = sample~variable,value.var = "cor"),aes(x=expected,y=observed,shape=sample))+
geom_point()+expand_limits(x=c(0,.1),y=c(0,.1))+geom_abline(slope=1)+labs(
x = expression(paste("Expected r"["PGS,PA-FGRS"])),
y = expression(paste("Observed R"["PGS,PA-FGRS"])),shape="") +
theme_classic() +
theme(
panel.border = element_rect(color = "black", fill = NA, size = 0.5),
axis.text = element_text(size = 10),
axis.title = element_text(size = 12)
)
g3
g3 <- ggplot(data=dcast(dt_long,formula = sample~variable,value.var = "cor"),aes(x=expected,y=observed,shape=sample))+
geom_point()+expand_limits(x=c(0,.1),y=c(0,.1))+geom_abline(slope=1)+labs(
x = expression(paste("Expected r"["PGS,PA-FGRS"])),
y = expression(paste("Observed r"["PGS,PA-FGRS"])),shape="") +
theme_classic() +
theme(
panel.border = element_rect(color = "black", fill = NA, size = 0.5),
axis.text = element_text(size = 10),
axis.title = element_text(size = 12)
)
gridExtra::grid.arrange(g1,g2,g3)
g1 <- ggplot(data=dcast(dt_long,formula = sample~variable,value.var = "pafgrs_R2"),aes(x=expected,y=observed,shape=sample))+
geom_point()+expand_limits(x=c(0,.05),y=c(0,.05))+geom_abline(slope=1)+labs(
x = expression(paste("Expected R"[l]^2, " (FGRS)")),
y = expression(paste("Observed R"[l]^2, " (FGRS)")),shape="")
+theme_classic() +
theme(
panel.border = element_rect(color = "black", fill = NA, size = 0.5),
axis.text = element_text(size = 10),
axis.title = element_text(size = 12)
)
g2 <- ggplot(data=dcast(dt_long,formula = sample~variable,value.var = "value"),aes(x=expected,y=observed,shape=sample))+
geom_point()+expand_limits(x=c(0,.05),y=c(0,.05))+geom_abline(slope=1)+labs(
x = expression(paste("Expected R"[l]^2, " (PGS)")),
y = expression(paste("Observed R"[l]^2, " (PGS)")),shape="")
g1 <- ggplot(data=dcast(dt_long,formula = sample~variable,value.var = "pafgrs_R2"),aes(x=expected,y=observed,shape=sample))+
geom_point()+expand_limits(x=c(0,.05),y=c(0,.05))+geom_abline(slope=1)
g1 <- ggplot(data=dcast(dt_long,formula = sample~variable,value.var = "pafgrs_R2"),aes(x=expected,y=observed,shape=sample))+
geom_point()+expand_limits(x=c(0,.05),y=c(0,.05))+geom_abline(slope=1)+labs(
x = expression(paste("Expected R"[l]^2, " (FGRS)")),
y = expression(paste("Observed R"[l]^2, " (FGRS)")),shape="")+theme_classic() +
theme(
panel.border = element_rect(color = "black", fill = NA, size = 0.5),
axis.text = element_text(size = 10),
axis.title = element_text(size = 12)
)
g2 <- ggplot(data=dcast(dt_long,formula = sample~variable,value.var = "value"),aes(x=expected,y=observed,shape=sample))+
geom_point()+expand_limits(x=c(0,.05),y=c(0,.05))+geom_abline(slope=1)+labs(
x = expression(paste("Expected R"[l]^2, " (PGS)")),
y = expression(paste("Observed R"[l]^2, " (PGS)")),shape="")+theme_classic() +
theme(
panel.border = element_rect(color = "black", fill = NA, size = 0.5),
axis.text = element_text(size = 10),
axis.title = element_text(size = 12)
)
g3 <- ggplot(data=dcast(dt_long,formula = sample~variable,value.var = "cor"),aes(x=expected,y=observed,shape=sample))+
geom_point()+expand_limits(x=c(0,.1),y=c(0,.1))+geom_abline(slope=1)+labs(
x = expression(paste("Expected r"["PGS,PA-FGRS"])),
y = expression(paste("Observed r"["PGS,PA-FGRS"])),shape="") +
theme_classic() +
theme(
panel.border = element_rect(color = "black", fill = NA, size = 0.5),
axis.text = element_text(size = 10),
axis.title = element_text(size = 12)
)
gridExtra::grid.arrange(g1,g2,g3)
dt_long= melt(dt,measure.vars = c("expected","observed"),)
g1 <- ggplot(dt_long,aes(x=sample, y=value,fill=variable))+
geom_bar(stat = "identity",position = "dodge",color="black")+theme_bw()+
labs(y=expression(R[l]^2-"PGS"),x="Sample",fill="")+ scale_fill_brewer(palette="Dark2")
dt_long[sample=="iPSYCH-2012"&variable=="expected",pafgrs_R2:=0.0207]
dt_long[sample=="iPSYCH-2015i"&variable=="expected",pafgrs_R2:=0.0205]
dt_long[sample=="iPSYCH-2012"&variable=="observed",pafgrs_R2:=0.028]
dt_long[sample=="iPSYCH-2015i"&variable=="observed",pafgrs_R2:=0.023]
g2 <- ggplot(dt_long,aes(x=sample, y=pafgrs_R2,fill=variable))+
geom_bar(stat = "identity",position = "dodge",color="black")+theme_bw()+
labs(y=expression(R[l]^2-"PA-FGRS"),x="Sample",fill="")+ scale_fill_brewer(palette="Dark2")
dt_long[sample=="iPSYCH-2012"&variable=="expected",cor:=0.029]
dt_long[sample=="iPSYCH-2015i"&variable=="expected",cor:=0.040]
dt_long[sample=="iPSYCH-2012"&variable=="observed", cor:=0.039]
dt_long[sample=="iPSYCH-2015i"&variable=="observed",cor:=0.056]
g3 <- ggplot(dt_long,aes(x=sample, y=cor,fill=variable))+
geom_bar(stat = "identity",position = "dodge",color="black")+theme_bw()+
labs(y=expression(corr("PGS","PAFGRS")),x="Sample",fill="")+ scale_fill_brewer(palette="Dark2")
gridExtra::grid.arrange(g1,g2,g3)
dt
g1 <- ggplot(data=dcast(dt_long,formula = sample~variable,value.var = "pafgrs_R2"),aes(x=expected,y=observed,shape=sample))+
geom_point()+expand_limits(x=c(0,.05),y=c(0,.05))+geom_abline(slope=1)+labs(
x = expression(paste("Expected R"[l]^2, " (FGRS)")),
y = expression(paste("Observed R"[l]^2, " (FGRS)")),shape="")+theme_classic() +
theme(
panel.border = element_rect(color = "black", fill = NA, size = 0.5),
axis.text = element_text(size = 10),
axis.title = element_text(size = 12)
)
g2 <- ggplot(data=dcast(dt_long,formula = sample~variable,value.var = "value"),aes(x=expected,y=observed,shape=sample))+
geom_point()+expand_limits(x=c(0,.05),y=c(0,.05))+geom_abline(slope=1)+labs(
x = expression(paste("Expected R"[l]^2, " (PGS)")),
y = expression(paste("Observed R"[l]^2, " (PGS)")),shape="")+theme_classic() +
theme(
panel.border = element_rect(color = "black", fill = NA, size = 0.5),
axis.text = element_text(size = 10),
axis.title = element_text(size = 12)
)
g3 <- ggplot(data=dcast(dt_long,formula = sample~variable,value.var = "cor"),aes(x=expected,y=observed,shape=sample))+
geom_point()+expand_limits(x=c(0,.1),y=c(0,.1))+geom_abline(slope=1)+labs(
x = expression(paste("Expected r"["PGS,PA-FGRS"])),
y = expression(paste("Observed r"["PGS,PA-FGRS"])),shape="") +
theme_classic() +
theme(
panel.border = element_rect(color = "black", fill = NA, size = 0.5),
axis.text = element_text(size = 10),
axis.title = element_text(size = 12)
)
gridExtra::grid.arrange(g1,g2,g3)
pdf( paste0( "Desktop/AJHG Revisions/Fig2/updated/legendAH.pdf" ), height=3, width=6 )
par( mar=c(3.5,3.5,1,1), oma=c(0,0,0,0), mgp=c( 2,0.5,0 ), tcl=-0.25 )
plot( 0:10, 0:10, type='n',
yaxt='n',
xaxt='n'
)
l1 <- as.expression( substitute( paste( "Trait 1: ", h^2, " = ", h2t, "; prev. = ", k, sep='' ), list( h2t=0.7, k=0.01 ) ) )
l2 <- as.expression( substitute( paste( "Trait 2: ", h^2, " = ", h2t, "; prev. = ", k, sep='' ), list( h2t=0.7, k=0.05 ) ) )
l3 <- as.expression( substitute( paste( "Trait 3: ", h^2, " = ", h2t, "; prev. = ", k, sep='' ), list( h2t=0.4, k=0.125 ) ) )
l4 <- as.expression( substitute( paste( "Trait 4: ", h^2, " = ", h2t, "; prev. = ", k, sep='' ), list( h2t=0.5, k=0.5 ) ) )
l5 <- as.expression( substitute( paste( "Trait 5: ", h^2, " = ", h2t, "; prev. = ", k, sep='' ), list( h2t=0.5, k="quantitative" ) ) )
legend( 'center', legend=c( "Simulated Trait Parameters (A-H)", l1, l2, l3, l4, l5 ),
col=c( NA, gg_color_hue(4),"black" ), lty=1, pch=16, bty='n' )
library( ggplot2 )
legend( 'center', legend=c( "Simulated Trait Parameters (A-H)", l1, l2, l3, l4, l5 ),
col=c( NA, gg_color_hue(4),"black" ), lty=1, pch=16, bty='n' )
library(scales)
legend( 'center', legend=c( "Simulated Trait Parameters (A-H)", l1, l2, l3, l4, l5 ),
col=c( NA, gg_color_hue(4),"black" ), lty=1, pch=16, bty='n' )
?gg_color_hue
??gg_color_hue
gg_color_hue <- function( n, l=65, c=100 ) {
hues = seq(15, 375, length = n + 1)
hcl( h=hues, l=l, c=c )[1:n]
}
legend( 'center', legend=c( "Simulated Trait Parameters (A-H)", l1, l2, l3, l4, l5 ),
col=c( NA, gg_color_hue(4),"black" ), lty=1, pch=16, bty='n' )
dev.off()
pdf( paste0( "Desktop/AJHG Revisions/Fig2/updated/legendAH.pdf" ), height=3, width=6 )
par( mar=c(3.5,3.5,1,1), oma=c(0,0,0,0), mgp=c( 2,0.5,0 ), tcl=-0.25 )
plot( 0:10, 0:10, type='n',
yaxt='n',
xaxt='n'
)
l1 <- as.expression( substitute( paste( "Trait 1: ", h^2, " = ", h2t, "; prev. = ", k, sep='' ), list( h2t=0.7, k=0.01 ) ) )
l2 <- as.expression( substitute( paste( "Trait 2: ", h^2, " = ", h2t, "; prev. = ", k, sep='' ), list( h2t=0.7, k=0.05 ) ) )
l3 <- as.expression( substitute( paste( "Trait 3: ", h^2, " = ", h2t, "; prev. = ", k, sep='' ), list( h2t=0.4, k=0.125 ) ) )
l4 <- as.expression( substitute( paste( "Trait 4: ", h^2, " = ", h2t, "; prev. = ", k, sep='' ), list( h2t=0.5, k=0.5 ) ) )
l5 <- as.expression( substitute( paste( "Trait 5: ", h^2, " = ", h2t, "; quantitative", sep='' ), list( h2t=0.5, k="quantitative" ) ) )
legend( 'center', legend=c( "Simulated Trait Parameters (A-H)", l1, l2, l3, l4, l5 ),
col=c( NA, gg_color_hue(4),"black" ), lty=1, pch=16, bty='n' )
dev.off()
# Initial model for age at onset and liability to disease
# Plan B: divvy up pairs according to affection status, work out mixture likelihoods separately.
#
library(MASS)  # for mvrnorm
require("OpenMx")
mxOption(key='Number of Threads', value=parallel::detectCores()) #now
require("psych")
?rcond
r_fgrs_pedigree_2nd =
function (prev = 0.2, h2 = 0.5, ped = NULL, rel_matrix = NULL, rel_w=NULL, rel_prev=NULL) {
if (is.null(rel_matrix))
rel <- kinship(pedigree(id = ped$id, dadid = ped$dadid,
momid = ped$momid, sex = ped$sex)) * 2 else rel <- rel_matrix
if(is.null(rel_prev)) rel_prev= rep(prev,nrow(rel)-1)
P <- h2 * rel[-1, -1,drop=F] * dnorm(qnorm(1 - rel_prev))^2 * (1 + h2 *
rel[-1, -1,drop=F] * qnorm(1 - rel_prev)^2/2)
diag(P) <- (rel_prev * (1 - rel_prev))
G <- h2 * rel[-1, 1] * (dnorm(qnorm(1 - rel_prev))) * rel_w
if(!is.null(rel_w)){
P <-   P*rel_w%*%t(rel_w)
diag(P) <-(rel_prev*rel_w*(1-rel_prev*rel_w))
G <- h2*rel[-1,1]*(dnorm(qnorm(1-rel_prev)))*rel_w
}
# This is the critical part that might fail - wrap in tryCatch
tryCatch({
if(any(G>0)) {
P_sub <- P[G>0, G>0]
# Optional: Check condition number for numerical stability (much faster than eigenvalues)
# if(rcond(P_sub) < 1e-12) {
#   return(c(r=NA, n_rel=sum(G>0)))
# }
# Direct matrix solving - let solve() handle singularity detection
r_value <- sqrt(t(G[G>0]) %*% solve(P_sub) %*% G[G>0]/h2)[1]
n_rel_value <- sum(G>0)
return(c(r=r_value, n_rel=n_rel_value))
} else {
return(c(r=NA, n_rel=sum(G>0)))
}
},
error = function(e) {
# Streamlined error handling - matrix inversion failed (likely singular)
if(any(G>0)) {
message("Matrix inversion failed for ", sum(G>0), " relatives - likely singular matrix")
}
return(c(r=NA, n_rel=sum(G>0)))
})
}
devtools::install_github("BioPsyk/PAFGRS", force = TRUE)
devtools::document()
setwd("PAFGRS")
devtools::document()     # Update documentation
devtools::build()        # Build package
devtools::check()        # Verify it works
devtools::install()      # Install locally
